#!/bin/bash

set -o errexit
set -o nounset

# Make sure we are in the right folder
# SCRIPTS_DIR=`pwd`
# PARENT_DIR=`dirname "$SCRIPTS_DIR"`
# HELM_CHART_DIR="$PARENT_DIR/helm"

# Setup names and attributes for resources
. ./environment



echo ========================================
echo
echo Deploying Certificate Manager to AKS
echo
echo ========================================
echo



# Make sure all the software we need is available
set +o errexit
AZ_LOC=`which az`
if [ "$AZ_LOC" == "" ]
then
    echo Unable to find Azure CLI \(az\) on the path
    exit 1
fi
set -o errexit



# We need to get the subscription ID and use that as a way to check if
# we are logged in
SUB_ID=`az account show --query id --output tsv`
if [ "$SUB_ID" == "" ]
then
    exit 1
fi



# deploy certificate manager
CERT_MANAGER_TAG=v1.8.0
az aks command invoke \
    --resource-group "$BPME_GROUP_NAME" \
    --name "$BPME_AKS_NAME" \
    --command "helm repo add jetstack https://charts.jetstack.io && helm repo update && \
        helm upgrade cert-manager jetstack/cert-manager \
            --install \
            --create-namespace \
            --namespace cert-manager \
            --version $CERT_MANAGER_TAG \
            --set installCRDs=true"



# deploy 2 cluster issuers that will use letsencrypt to issue certificates
az aks command invoke \
    --resource-group "$BPME_GROUP_NAME" \
    --name "$BPME_AKS_NAME" \
    --command "kubectl apply -f - <<END
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: noreply-cloud@tibco.com
    privateKeySecretRef:
      name: letsencrypt
    solvers:
    - http01:
        ingress:
          class: azure/application-gateway
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: noreply-cloud@tibco.com
    privateKeySecretRef:
      name: letsencrypt
    solvers:
    - http01:
        ingress:
          class: azure/application-gateway
END"
